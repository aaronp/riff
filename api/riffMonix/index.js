Index.PACKAGES = {"riff" : [], "riff.monix.client" : [{"name" : "riff.monix.client.AppendStatusObservable", "shortDescription" : "Converts the observable inputs to a riff.raft.node.RaftNode and its riff.monix.log.ObservableLog in order toprovide an Observable[AppendStatus] which can be used to observe the result of an append action from a riff.raft.RaftClient", "object" : "riff\/monix\/client\/AppendStatusObservable$.html", "members_object" : [{"label" : "apply", "tail" : "(nodeId: NodeId, clusterSize: Int, nodeInput: Observable[RaftMessage[A]], appendResults: Observable[LogAppendResult], committedCoordsInput: Observable[LogCoords], maxCapacity: Int)(scheduler: Scheduler): (Observer[LogAppendResult], Observable[AppendStatus])", "member" : "riff.monix.client.AppendStatusObservable.apply", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#apply[A](nodeId:riff.raft.NodeId,clusterSize:Int,nodeInput:monix.reactive.Observable[riff.raft.messages.RaftMessage[A]],appendResults:monix.reactive.Observable[riff.raft.log.LogAppendResult],committedCoordsInput:monix.reactive.Observable[riff.raft.log.LogCoords],maxCapacity:Int)(implicitscheduler:monix.execution.Scheduler):(monix.reactive.Observer[riff.raft.log.LogAppendResult],monix.reactive.Observable[riff.raft.AppendStatus])", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/client\/AppendStatusObservable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/client\/AppendStatusObservable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "riff.monix.log" : [{"name" : "riff.monix.log.AppendOps", "members_trait" : [{"label" : "appendedEntries", "tail" : "(): Observable[(LogCoords, A)]", "member" : "riff.monix.log.AppendOps.appendedEntries", "link" : "riff\/monix\/log\/AppendOps.html#appendedEntries():monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "appendedEntriesFrom", "tail" : "(index: LogIndex): Observable[(LogCoords, A)]", "member" : "riff.monix.log.AppendOps.appendedEntriesFrom", "link" : "riff\/monix\/log\/AppendOps.html#appendedEntriesFrom(index:riff.raft.LogIndex):monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "appendCoords", "tail" : "(): Observable[LogCoords]", "member" : "riff.monix.log.AppendOps.appendCoords", "link" : "riff\/monix\/log\/AppendOps.html#appendCoords():monix.reactive.Observable[riff.raft.log.LogCoords]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/log\/AppendOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/log\/AppendOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/log\/AppendOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/log\/AppendOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/log\/AppendOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/log\/AppendOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/log\/AppendOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/AppendOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/AppendOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/AppendOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/log\/AppendOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/log\/AppendOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/log\/AppendOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/log\/AppendOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/log\/AppendOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/log\/AppendOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/log\/AppendOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/log\/AppendOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/log\/AppendOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dataForIndex", "tail" : "(coords: LogCoords): Observable[(LogCoords, A)]", "member" : "riff.monix.log.AppendOps.dataForIndex", "link" : "riff\/monix\/log\/AppendOps.html#dataForIndex(coords:riff.raft.log.LogCoords):monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "abstract def"}, {"label" : "appendedCoordsFrom", "tail" : "(index: LogIndex): Observable[LogCoords]", "member" : "riff.monix.log.AppendOps.appendedCoordsFrom", "link" : "riff\/monix\/log\/AppendOps.html#appendedCoordsFrom(index:riff.raft.LogIndex):monix.reactive.Observable[riff.raft.log.LogCoords]", "kind" : "abstract def"}, {"label" : "appendResults", "tail" : "(): Observable[LogAppendResult]", "member" : "riff.monix.log.AppendOps.appendResults", "link" : "riff\/monix\/log\/AppendOps.html#appendResults():monix.reactive.Observable[riff.raft.log.LogAppendResult]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "riff\/monix\/log\/AppendOps.html", "kind" : "trait"}, {"name" : "riff.monix.log.CommittedOps", "members_trait" : [{"label" : "committedEntries", "tail" : "(): Observable[(LogCoords, A)]", "member" : "riff.monix.log.CommittedOps.committedEntries", "link" : "riff\/monix\/log\/CommittedOps.html#committedEntries():monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "committedEntriesFrom", "tail" : "(index: LogIndex): Observable[(LogCoords, A)]", "member" : "riff.monix.log.CommittedOps.committedEntriesFrom", "link" : "riff\/monix\/log\/CommittedOps.html#committedEntriesFrom(index:riff.raft.LogIndex):monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/log\/CommittedOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/log\/CommittedOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/log\/CommittedOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/log\/CommittedOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/log\/CommittedOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/log\/CommittedOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/log\/CommittedOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/CommittedOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/CommittedOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/CommittedOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/log\/CommittedOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/log\/CommittedOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/log\/CommittedOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/log\/CommittedOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/log\/CommittedOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/log\/CommittedOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/log\/CommittedOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/log\/CommittedOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/log\/CommittedOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "dataForIndex", "tail" : "(coords: LogCoords): Observable[(LogCoords, A)]", "member" : "riff.monix.log.CommittedOps.dataForIndex", "link" : "riff\/monix\/log\/CommittedOps.html#dataForIndex(coords:riff.raft.log.LogCoords):monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "abstract def"}, {"label" : "committedCoordsFrom", "tail" : "(index: LogIndex): Observable[LogCoords]", "member" : "riff.monix.log.CommittedOps.committedCoordsFrom", "link" : "riff\/monix\/log\/CommittedOps.html#committedCoordsFrom(index:riff.raft.LogIndex):monix.reactive.Observable[riff.raft.log.LogCoords]", "kind" : "abstract def"}, {"label" : "committedCoords", "tail" : "(): Observable[LogCoords]", "member" : "riff.monix.log.CommittedOps.committedCoords", "link" : "riff\/monix\/log\/CommittedOps.html#committedCoords():monix.reactive.Observable[riff.raft.log.LogCoords]", "kind" : "abstract def"}], "shortDescription" : "Represents observable operations which can be performed on a riff.raft.log.RaftLog for committed log entries", "trait" : "riff\/monix\/log\/CommittedOps.html", "kind" : "trait"}, {"name" : "riff.monix.log.ObservableLog", "shortDescription" : "Wraps a riff.raft.log.RaftLog for a local node which exposes Observable data publishers for:$ Appended LogCoords$ Appended LogEntry$ Appended LogCoords from a historic index$ Appended LogEntry from a historic index$ Committed LogCoords$ Committed LogEntry$ Committed LogCoords from a historic index$ Committed LogEntry from a historic index", "object" : "riff\/monix\/log\/ObservableLog$.html", "members_object" : [{"label" : "AsRichLog", "tail" : "", "member" : "riff.monix.log.ObservableLog.AsRichLog", "link" : "riff\/monix\/log\/ObservableLog$.html#AsRichLog[A]extendsAnyRef", "kind" : "implicit class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/log\/ObservableLog$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/log\/ObservableLog$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/log\/ObservableLog$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/log\/ObservableLog$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/log\/ObservableLog$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/log\/ObservableLog$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/log\/ObservableLog$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/ObservableLog$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/ObservableLog$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/ObservableLog$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/log\/ObservableLog$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/log\/ObservableLog$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/log\/ObservableLog$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/log\/ObservableLog$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/log\/ObservableLog$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/log\/ObservableLog$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/log\/ObservableLog$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/log\/ObservableLog$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/log\/ObservableLog$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "commit", "tail" : "(index: LogIndex): Seq[LogCoords]", "member" : "riff.monix.log.ObservableLog.commit", "link" : "riff\/monix\/log\/ObservableLog.html#commit(index:riff.raft.LogIndex):Seq[riff.raft.log.LogCoords]", "kind" : "def"}, {"label" : "appendAll", "tail" : "(fromIndex: LogIndex, data: Array[LogEntry[A]]): LogAppendResult", "member" : "riff.monix.log.ObservableLog.appendAll", "link" : "riff\/monix\/log\/ObservableLog.html#appendAll(fromIndex:riff.raft.LogIndex,data:Array[riff.raft.log.LogEntry[A]]):riff.raft.log.LogAppendResult", "kind" : "def"}, {"label" : "latestAppendedIndex", "tail" : "(): LogIndex", "member" : "riff.monix.log.ObservableLog.latestAppendedIndex", "link" : "riff\/monix\/log\/ObservableLog.html#latestAppendedIndex():riff.raft.LogIndex", "kind" : "def"}, {"label" : "latestCommittedIndex", "tail" : "(): LogIndex", "member" : "riff.monix.log.ObservableLog.latestCommittedIndex", "link" : "riff\/monix\/log\/ObservableLog.html#latestCommittedIndex():riff.raft.LogIndex", "kind" : "def"}, {"label" : "dataForIndex", "tail" : "(coords: LogCoords): Observable[(LogCoords, A)]", "member" : "riff.monix.log.ObservableLog.dataForIndex", "link" : "riff\/monix\/log\/ObservableLog.html#dataForIndex(coords:riff.raft.log.LogCoords):monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "appendedCoordsFrom", "tail" : "(index: LogIndex): Observable[LogCoords]", "member" : "riff.monix.log.ObservableLog.appendedCoordsFrom", "link" : "riff\/monix\/log\/ObservableLog.html#appendedCoordsFrom(index:riff.raft.LogIndex):monix.reactive.Observable[riff.raft.log.LogCoords]", "kind" : "def"}, {"label" : "appendResults", "tail" : "(): Observable[LogAppendResult]", "member" : "riff.monix.log.ObservableLog.appendResults", "link" : "riff\/monix\/log\/ObservableLog.html#appendResults():monix.reactive.Observable[riff.raft.log.LogAppendResult]", "kind" : "def"}, {"label" : "committedCoords", "tail" : "(): Observable[LogCoords]", "member" : "riff.monix.log.ObservableLog.committedCoords", "link" : "riff\/monix\/log\/ObservableLog.html#committedCoords():monix.reactive.Observable[riff.raft.log.LogCoords]", "kind" : "def"}, {"label" : "committedCoordsFrom", "tail" : "(index: LogIndex): Observable[LogCoords]", "member" : "riff.monix.log.ObservableLog.committedCoordsFrom", "link" : "riff\/monix\/log\/ObservableLog.html#committedCoordsFrom(index:riff.raft.LogIndex):monix.reactive.Observable[riff.raft.log.LogCoords]", "kind" : "def"}, {"member" : "riff.monix.log.ObservableLog#<init>", "error" : "unsupported entity"}, {"label" : "underlying", "tail" : ": RaftLog[A]", "member" : "riff.monix.log.ObservableLog.underlying", "link" : "riff\/monix\/log\/ObservableLog.html#underlying:riff.raft.log.RaftLog[A]", "kind" : "val"}, {"label" : "appendedEntries", "tail" : "(): Observable[(LogCoords, A)]", "member" : "riff.monix.log.AppendOps.appendedEntries", "link" : "riff\/monix\/log\/ObservableLog.html#appendedEntries():monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "appendedEntriesFrom", "tail" : "(index: LogIndex): Observable[(LogCoords, A)]", "member" : "riff.monix.log.AppendOps.appendedEntriesFrom", "link" : "riff\/monix\/log\/ObservableLog.html#appendedEntriesFrom(index:riff.raft.LogIndex):monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "appendCoords", "tail" : "(): Observable[LogCoords]", "member" : "riff.monix.log.AppendOps.appendCoords", "link" : "riff\/monix\/log\/ObservableLog.html#appendCoords():monix.reactive.Observable[riff.raft.log.LogCoords]", "kind" : "def"}, {"label" : "committedEntries", "tail" : "(): Observable[(LogCoords, A)]", "member" : "riff.monix.log.CommittedOps.committedEntries", "link" : "riff\/monix\/log\/ObservableLog.html#committedEntries():monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "committedEntriesFrom", "tail" : "(index: LogIndex): Observable[(LogCoords, A)]", "member" : "riff.monix.log.CommittedOps.committedEntriesFrom", "link" : "riff\/monix\/log\/ObservableLog.html#committedEntriesFrom(index:riff.raft.LogIndex):monix.reactive.Observable[(riff.raft.log.LogCoords,A)]", "kind" : "def"}, {"label" : "entryForIndex", "tail" : "(index: LogIndex): Option[LogEntry[A]]", "member" : "riff.raft.log.DelegateLog.entryForIndex", "link" : "riff\/monix\/log\/ObservableLog.html#entryForIndex(index:riff.raft.LogIndex):Option[riff.raft.log.LogEntry[A]]", "kind" : "def"}, {"label" : "latestAppended", "tail" : "(): LogCoords", "member" : "riff.raft.log.DelegateLog.latestAppended", "link" : "riff\/monix\/log\/ObservableLog.html#latestAppended():riff.raft.log.LogCoords", "kind" : "def"}, {"label" : "termForIndex", "tail" : "(index: LogIndex): Option[Term]", "member" : "riff.raft.log.DelegateLog.termForIndex", "link" : "riff\/monix\/log\/ObservableLog.html#termForIndex(index:riff.raft.LogIndex):Option[riff.raft.Term]", "kind" : "def"}, {"label" : "latestCommit", "tail" : "(): LogIndex", "member" : "riff.raft.log.DelegateLog.latestCommit", "link" : "riff\/monix\/log\/ObservableLog.html#latestCommit():riff.raft.LogIndex", "kind" : "def"}, {"label" : "onAppend", "tail" : "(currentTerm: Term, request: AppendEntries[A]): AppendEntriesResponse", "member" : "riff.raft.log.RaftLogOps.onAppend", "link" : "riff\/monix\/log\/ObservableLog.html#onAppend(currentTerm:riff.raft.Term,request:riff.raft.messages.AppendEntries[A]):riff.raft.messages.AppendEntriesResponse", "kind" : "def"}, {"label" : "containsIndex", "tail" : "(index: LogCoords): Boolean", "member" : "riff.raft.log.RaftLogOps.containsIndex", "link" : "riff\/monix\/log\/ObservableLog.html#containsIndex(index:riff.raft.log.LogCoords):Boolean", "kind" : "def"}, {"label" : "entriesFrom", "tail" : "(firstIndex: LogIndex, max: Int): Array[LogEntry[A]]", "member" : "riff.raft.log.RaftLogOps.entriesFrom", "link" : "riff\/monix\/log\/ObservableLog.html#entriesFrom(firstIndex:riff.raft.LogIndex,max:Int):Array[riff.raft.log.LogEntry[A]]", "kind" : "def"}, {"label" : "onCommit", "tail" : "(applyToStateMachine: (LogEntry[A]) ⇒ Unit): StateMachineLog[A]", "member" : "riff.raft.log.RaftLogOps.onCommit", "link" : "riff\/monix\/log\/ObservableLog.html#onCommit(applyToStateMachine:riff.raft.log.LogEntry[A]=>Unit):riff.raft.log.StateMachineLog[A]", "kind" : "def"}, {"label" : "cached", "tail" : "(): CachingLog[A]", "member" : "riff.raft.log.RaftLogOps.cached", "link" : "riff\/monix\/log\/ObservableLog.html#cached():riff.raft.log.CachingLog[A]", "kind" : "def"}, {"label" : "coordsForIndex", "tail" : "(index: LogIndex): Option[LogCoords]", "member" : "riff.raft.log.RaftLogOps.coordsForIndex", "link" : "riff\/monix\/log\/ObservableLog.html#coordsForIndex(index:riff.raft.LogIndex):Option[riff.raft.log.LogCoords]", "kind" : "final def"}, {"label" : "logState", "tail" : "(): LogState", "member" : "riff.raft.log.RaftLogOps.logState", "link" : "riff\/monix\/log\/ObservableLog.html#logState():riff.raft.log.LogState", "kind" : "def"}, {"label" : "contains", "tail" : "(entry: LogCoords): Boolean", "member" : "riff.raft.log.RaftLogOps.contains", "link" : "riff\/monix\/log\/ObservableLog.html#contains(entry:riff.raft.log.LogCoords):Boolean", "kind" : "def"}, {"label" : "append", "tail" : "(coords: LogCoords, data: A, theRest: A*)(classTag: ClassTag[A]): LogAppendResult", "member" : "riff.raft.log.RaftLogOps.append", "link" : "riff\/monix\/log\/ObservableLog.html#append(coords:riff.raft.log.LogCoords,data:A,theRest:A*)(implicitclassTag:scala.reflect.ClassTag[A]):riff.raft.log.LogAppendResult", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/log\/ObservableLog.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/log\/ObservableLog.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/log\/ObservableLog.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/log\/ObservableLog.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/log\/ObservableLog.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/log\/ObservableLog.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/log\/ObservableLog.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/ObservableLog.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/ObservableLog.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/log\/ObservableLog.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/log\/ObservableLog.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/log\/ObservableLog.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/log\/ObservableLog.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/log\/ObservableLog.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/log\/ObservableLog.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/log\/ObservableLog.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "riff\/monix\/log\/ObservableLog.html", "kind" : "case class"}], "eie" : [], "eie.io" : [], "riff.monix" : [{"name" : "riff.monix.EventSource", "shortDescription" : "Contains a function for applying a log type A to a state S, and persisting that state.", "object" : "riff\/monix\/EventSource$.html", "members_object" : [{"label" : "FileDao", "tail" : "", "member" : "riff.monix.EventSource.FileDao", "link" : "riff\/monix\/EventSource$.html#FileDao[S]extendsEventSource.StateDao[S]", "kind" : "class"}, {"label" : "StateDao", "tail" : "", "member" : "riff.monix.EventSource.StateDao", "link" : "riff\/monix\/EventSource$.html#StateDao[S]extendsAnyRef", "kind" : "trait"}, {"label" : "apply", "tail" : "(dao: StateDao[S], log: CommittedOps[A], snapEvery: Int, bufferSize: Int)(combine: (S, A) ⇒ S): Try[Observable[S]]", "member" : "riff.monix.EventSource.apply", "link" : "riff\/monix\/EventSource$.html#apply[S,A](dao:riff.monix.EventSource.StateDao[S],log:riff.monix.log.CommittedOps[A],snapEvery:Int,bufferSize:Int)(combine:(S,A)=>S):scala.util.Try[monix.reactive.Observable[S]]", "kind" : "def"}, {"label" : "dao", "tail" : "(dataDir: Path, initial: ⇒ S, numberToKeep: Option[Int])(arg0: FromBytes[S], arg1: ToBytes[S]): FileDao[S]", "member" : "riff.monix.EventSource.dao", "link" : "riff\/monix\/EventSource$.html#dao[S,A](dataDir:java.nio.file.Path,initial:=>S,numberToKeep:Option[Int])(implicitevidence$3:eie.io.FromBytes[S],implicitevidence$4:eie.io.ToBytes[S]):riff.monix.EventSource.FileDao[S]", "kind" : "def"}, {"label" : "inDir", "tail" : "(dataDir: Path, initial: ⇒ S, log: CommittedOps[A], snapEvery: Int, numberToKeep: Option[Int])(combine: (S, A) ⇒ S)(arg0: FromBytes[S], arg1: ToBytes[S]): Try[Observable[S]]", "member" : "riff.monix.EventSource.inDir", "link" : "riff\/monix\/EventSource$.html#inDir[S,A](dataDir:java.nio.file.Path,initial:=>S,log:riff.monix.log.CommittedOps[A],snapEvery:Int,numberToKeep:Option[Int])(combine:(S,A)=>S)(implicitevidence$1:eie.io.FromBytes[S],implicitevidence$2:eie.io.ToBytes[S]):scala.util.Try[monix.reactive.Observable[S]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/EventSource$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/EventSource$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/EventSource$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/EventSource$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/EventSource$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/EventSource$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/EventSource$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/EventSource$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/EventSource$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/EventSource$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/EventSource$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/EventSource$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/EventSource$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/EventSource$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/EventSource$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/EventSource$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/EventSource$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/EventSource$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/EventSource$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "riff.monix.InfiniteConcurrentSubject", "shortDescription" : "", "object" : "riff\/monix\/InfiniteConcurrentSubject$.html", "members_class" : [{"label" : "input", "tail" : ": Observer[A]", "member" : "riff.monix.InfiniteConcurrentSubject.input", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#input:monix.reactive.Observer[A]", "kind" : "val"}, {"label" : "output", "tail" : "(): Observable[A]", "member" : "riff.monix.InfiniteConcurrentSubject.output", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#output:monix.reactive.Observable[A]", "kind" : "def"}, {"member" : "riff.monix.InfiniteConcurrentSubject#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/InfiniteConcurrentSubject.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/InfiniteConcurrentSubject.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(subject: ConcurrentSubject[A, A])(scheduler: Scheduler): InfiniteConcurrentSubject[A]", "member" : "riff.monix.InfiniteConcurrentSubject.apply", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#apply[A](subject:monix.reactive.subjects.ConcurrentSubject[A,A])(implicitscheduler:monix.execution.Scheduler):riff.monix.InfiniteConcurrentSubject[A]", "kind" : "def"}, {"label" : "apply", "tail" : "(scheduler: Scheduler): InfiniteConcurrentSubject[A]", "member" : "riff.monix.InfiniteConcurrentSubject.apply", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#apply[A](implicitscheduler:monix.execution.Scheduler):riff.monix.InfiniteConcurrentSubject[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/InfiniteConcurrentSubject$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "riff\/monix\/InfiniteConcurrentSubject.html", "kind" : "class"}, {"name" : "riff.monix.LowPriorityRiffMonixImplicits", "members_trait" : [{"label" : "observableAsPublisher", "tail" : "(scheduler: Scheduler): AsPublisher[Observable]", "member" : "riff.monix.LowPriorityRiffMonixImplicits.observableAsPublisher", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#observableAsPublisher(implicitscheduler:monix.execution.Scheduler):riff.reactive.AsPublisher[monix.reactive.Observable]", "kind" : "implicit def"}, {"label" : "observerAsSubscriber", "tail" : "(scheduler: Scheduler): AsSubscriber[Observer]", "member" : "riff.monix.LowPriorityRiffMonixImplicits.observerAsSubscriber", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#observerAsSubscriber(implicitscheduler:monix.execution.Scheduler):riff.reactive.AsSubscriber[monix.reactive.Observer]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "shortDescription" : "", "object" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html", "members_object" : [{"label" : "observableAsPublisher", "tail" : "(scheduler: Scheduler): AsPublisher[Observable]", "member" : "riff.monix.LowPriorityRiffMonixImplicits.observableAsPublisher", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#observableAsPublisher(implicitscheduler:monix.execution.Scheduler):riff.reactive.AsPublisher[monix.reactive.Observable]", "kind" : "implicit def"}, {"label" : "observerAsSubscriber", "tail" : "(scheduler: Scheduler): AsSubscriber[Observer]", "member" : "riff.monix.LowPriorityRiffMonixImplicits.observerAsSubscriber", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#observerAsSubscriber(implicitscheduler:monix.execution.Scheduler):riff.reactive.AsSubscriber[monix.reactive.Observer]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/LowPriorityRiffMonixImplicits$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "riff\/monix\/LowPriorityRiffMonixImplicits.html", "kind" : "object"}, {"name" : "riff.monix.MonixClient", "shortDescription" : "An implementation of RaftClient which will push incoming data into the input for the node (i.e.", "members_case class" : [{"label" : "append", "tail" : "(data: Array[A]): Observable[AppendStatus]", "member" : "riff.monix.MonixClient.append", "link" : "riff\/monix\/MonixClient.html#append(data:Array[A]):monix.reactive.Observable[riff.raft.AppendStatus]", "kind" : "def"}, {"member" : "riff.monix.MonixClient#<init>", "error" : "unsupported entity"}, {"label" : "raftNodeLogResults", "tail" : ": Observable[LogAppendResult]", "member" : "riff.monix.MonixClient.raftNodeLogResults", "link" : "riff\/monix\/MonixClient.html#raftNodeLogResults:monix.reactive.Observable[riff.raft.log.LogAppendResult]", "kind" : "val"}, {"label" : "inputSubscriber", "tail" : ": Observer[RaftMessage[A]]", "member" : "riff.monix.MonixClient.inputSubscriber", "link" : "riff\/monix\/MonixClient.html#inputSubscriber:monix.reactive.Observer[riff.raft.messages.RaftMessage[A]]", "kind" : "val"}, {"label" : "observableAsPublisher", "tail" : "(scheduler: Scheduler): AsPublisher[Observable]", "member" : "riff.monix.LowPriorityRiffMonixImplicits.observableAsPublisher", "link" : "riff\/monix\/MonixClient.html#observableAsPublisher(implicitscheduler:monix.execution.Scheduler):riff.reactive.AsPublisher[monix.reactive.Observable]", "kind" : "implicit def"}, {"label" : "observerAsSubscriber", "tail" : "(scheduler: Scheduler): AsSubscriber[Observer]", "member" : "riff.monix.LowPriorityRiffMonixImplicits.observerAsSubscriber", "link" : "riff\/monix\/MonixClient.html#observerAsSubscriber(implicitscheduler:monix.execution.Scheduler):riff.reactive.AsSubscriber[monix.reactive.Observer]", "kind" : "implicit def"}, {"label" : "append", "tail" : "(data: A, theRest: A*)(classTag: ClassTag[A]): Observable[AppendStatus]", "member" : "riff.raft.RaftClient.append", "link" : "riff\/monix\/MonixClient.html#append(data:A,theRest:A*)(implicitclassTag:scala.reflect.ClassTag[A]):F[riff.raft.AppendStatus]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/MonixClient.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/MonixClient.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/MonixClient.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/MonixClient.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/MonixClient.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/MonixClient.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/MonixClient.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClient.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClient.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClient.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/MonixClient.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/MonixClient.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/MonixClient.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/MonixClient.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/MonixClient.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/MonixClient.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "riff\/monix\/MonixClient.html", "kind" : "case class"}, {"name" : "riff.monix.MonixClock", "shortDescription" : "", "object" : "riff\/monix\/MonixClock$.html", "members_class" : [{"label" : "resetReceiveHeartbeatTimeout", "tail" : "(callback: TimerCallback[_]): Cancelable", "member" : "riff.monix.MonixClock.resetReceiveHeartbeatTimeout", "link" : "riff\/monix\/MonixClock.html#resetReceiveHeartbeatTimeout(callback:riff.raft.timer.TimerCallback[_]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "resetSendHeartbeatTimeout", "tail" : "(callback: TimerCallback[_]): Cancelable", "member" : "riff.monix.MonixClock.resetSendHeartbeatTimeout", "link" : "riff\/monix\/MonixClock.html#resetSendHeartbeatTimeout(callback:riff.raft.timer.TimerCallback[_]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "cancelTimeout", "tail" : "(c: Cancelable): Unit", "member" : "riff.monix.MonixClock.cancelTimeout", "link" : "riff\/monix\/MonixClock.html#cancelTimeout(c:monix.execution.Cancelable):Unit", "kind" : "def"}, {"label" : "CancelT", "tail" : "", "member" : "riff.monix.MonixClock.CancelT", "link" : "riff\/monix\/MonixClock.html#CancelT=monix.execution.Cancelable", "kind" : "type"}, {"member" : "riff.monix.MonixClock#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/MonixClock.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/MonixClock.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/MonixClock.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/MonixClock.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/MonixClock.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/MonixClock.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/MonixClock.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClock.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClock.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClock.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/MonixClock.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/MonixClock.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/MonixClock.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/MonixClock.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/MonixClock.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/MonixClock.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/MonixClock.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/MonixClock.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/MonixClock.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(sendHeartbeatTimeout: FiniteDuration, receiveHeartbeatMinMaxTimeout: RandomTimer)(sched: Scheduler): MonixClock", "member" : "riff.monix.MonixClock.apply", "link" : "riff\/monix\/MonixClock$.html#apply(sendHeartbeatTimeout:scala.concurrent.duration.FiniteDuration,receiveHeartbeatMinMaxTimeout:riff.raft.timer.RandomTimer)(implicitsched:monix.execution.Scheduler):riff.monix.MonixClock", "kind" : "def"}, {"label" : "apply", "tail" : "()(sched: Scheduler): MonixClock", "member" : "riff.monix.MonixClock.apply", "link" : "riff\/monix\/MonixClock$.html#apply()(implicitsched:monix.execution.Scheduler):riff.monix.MonixClock", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/MonixClock$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/MonixClock$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/MonixClock$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/MonixClock$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/MonixClock$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/MonixClock$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/MonixClock$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClock$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClock$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/MonixClock$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/MonixClock$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/MonixClock$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/MonixClock$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/MonixClock$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/MonixClock$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/MonixClock$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/MonixClock$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/MonixClock$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/MonixClock$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "riff\/monix\/MonixClock.html", "kind" : "class"}, {"name" : "riff.monix.ObservableCache", "shortDescription" : "Similar to a replay observable", "members_class" : [{"member" : "riff.monix.ObservableCache#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/ObservableCache.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/ObservableCache.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/ObservableCache.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/ObservableCache.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/ObservableCache.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/ObservableCache.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/ObservableCache.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableCache.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableCache.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableCache.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/ObservableCache.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/ObservableCache.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/ObservableCache.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/ObservableCache.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/ObservableCache.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/ObservableCache.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/ObservableCache.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/ObservableCache.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/ObservableCache.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "riff\/monix\/ObservableCache.html", "kind" : "class"}, {"name" : "riff.monix.ObservableRaftEndpoint", "shortDescription" : "This should be the main entry for a Raft node when using Monix.", "object" : "riff\/monix\/ObservableRaftEndpoint$.html", "members_class" : [{"label" : "client", "tail" : "(): RaftClient[Observable, A]", "member" : "riff.monix.ObservableRaftEndpoint.client", "link" : "riff\/monix\/ObservableRaftEndpoint.html#client:riff.raft.RaftClient[monix.reactive.Observable,A]", "kind" : "def"}, {"label" : "pipe", "tail" : ": RaftPipe[A, Observer, Observable, Observable, RaftNode[A]]", "member" : "riff.monix.ObservableRaftEndpoint.pipe", "link" : "riff\/monix\/ObservableRaftEndpoint.html#pipe:riff.RaftPipe[A,monix.reactive.Observer,monix.reactive.Observable,monix.reactive.Observable,riff.raft.node.RaftNode[A]]", "kind" : "lazy val"}, {"label" : "resetReceiveHeartbeat", "tail" : "(): Unit", "member" : "riff.monix.ObservableRaftEndpoint.resetReceiveHeartbeat", "link" : "riff\/monix\/ObservableRaftEndpoint.html#resetReceiveHeartbeat():Unit", "kind" : "def"}, {"label" : "cancelHeartbeats", "tail" : "(): Unit", "member" : "riff.monix.ObservableRaftEndpoint.cancelHeartbeats", "link" : "riff\/monix\/ObservableRaftEndpoint.html#cancelHeartbeats():Unit", "kind" : "def"}, {"label" : "nodeId", "tail" : "(): NodeId", "member" : "riff.monix.ObservableRaftEndpoint.nodeId", "link" : "riff\/monix\/ObservableRaftEndpoint.html#nodeId:riff.raft.NodeId", "kind" : "def"}, {"label" : "cluster", "tail" : "(): RaftCluster", "member" : "riff.monix.ObservableRaftEndpoint.cluster", "link" : "riff\/monix\/ObservableRaftEndpoint.html#cluster:riff.raft.node.RaftCluster", "kind" : "def"}, {"label" : "clock", "tail" : ": RaftClock", "member" : "riff.monix.ObservableRaftEndpoint.clock", "link" : "riff\/monix\/ObservableRaftEndpoint.html#clock:riff.raft.timer.RaftClock", "kind" : "implicit val"}, {"label" : "scheduler", "tail" : ": Scheduler", "member" : "riff.monix.ObservableRaftEndpoint.scheduler", "link" : "riff\/monix\/ObservableRaftEndpoint.html#scheduler:monix.execution.Scheduler", "kind" : "implicit val"}, {"label" : "log", "tail" : ": ObservableLog[A]", "member" : "riff.monix.ObservableRaftEndpoint.log", "link" : "riff\/monix\/ObservableRaftEndpoint.html#log:riff.monix.log.ObservableLog[A]", "kind" : "val"}, {"label" : "timerCallback", "tail" : ": ObservableTimerCallback", "member" : "riff.monix.ObservableRaftEndpoint.timerCallback", "link" : "riff\/monix\/ObservableRaftEndpoint.html#timerCallback:riff.monix.ObservableTimerCallback", "kind" : "val"}, {"label" : "stateCallback", "tail" : ": ObservableState", "member" : "riff.monix.ObservableRaftEndpoint.stateCallback", "link" : "riff\/monix\/ObservableRaftEndpoint.html#stateCallback:riff.monix.ObservableState", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/ObservableRaftEndpoint.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/ObservableRaftEndpoint.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/ObservableRaftEndpoint.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/ObservableRaftEndpoint.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/ObservableRaftEndpoint.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/ObservableRaftEndpoint.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/ObservableRaftEndpoint.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableRaftEndpoint.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableRaftEndpoint.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableRaftEndpoint.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/ObservableRaftEndpoint.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/ObservableRaftEndpoint.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/ObservableRaftEndpoint.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/ObservableRaftEndpoint.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/ObservableRaftEndpoint.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/ObservableRaftEndpoint.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/ObservableRaftEndpoint.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/ObservableRaftEndpoint.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/ObservableRaftEndpoint.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "(name: NodeId, dir: Path, cluster: RaftCluster, maxAppendSize: Int, createDirIfNotExists: Boolean)(arg0: ToBytes[A], arg1: FromBytes[A], arg2: ClassTag[A], scheduler: Scheduler, clock: RaftClock): ObservableRaftEndpoint[A]", "member" : "riff.monix.ObservableRaftEndpoint.apply", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#apply[A](name:riff.raft.NodeId,dir:java.nio.file.Path,cluster:riff.raft.node.RaftCluster,maxAppendSize:Int,createDirIfNotExists:Boolean)(implicitevidence$4:eie.io.ToBytes[A],implicitevidence$5:eie.io.FromBytes[A],implicitevidence$6:scala.reflect.ClassTag[A],implicitscheduler:monix.execution.Scheduler,implicitclock:riff.raft.timer.RaftClock):riff.monix.ObservableRaftEndpoint[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/ObservableRaftEndpoint$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/ObservableRaftEndpoint$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "riff\/monix\/ObservableRaftEndpoint.html", "kind" : "class"}, {"name" : "riff.monix.ObservableState", "shortDescription" : "Provides a means to represent a riff.raft.node.RaftNode's role as an Observable:", "object" : "riff\/monix\/ObservableState$.html", "members_class" : [{"label" : "events", "tail" : "(): Observable[RoleEvent]", "member" : "riff.monix.ObservableState.events", "link" : "riff\/monix\/ObservableState.html#events:monix.reactive.Observable[riff.raft.node.RoleCallback.RoleEvent]", "kind" : "def"}, {"label" : "onEvent", "tail" : "(event: RoleEvent): Unit", "member" : "riff.monix.ObservableState.onEvent", "link" : "riff\/monix\/ObservableState.html#onEvent(event:riff.raft.node.RoleCallback.RoleEvent):Unit", "kind" : "def"}, {"member" : "riff.monix.ObservableState#<init>", "error" : "unsupported entity"}, {"label" : "onRoleChange", "tail" : "(term: Term, oldRole: NodeRole, newRole: NodeRole): Unit", "member" : "riff.raft.node.RoleCallback.onRoleChange", "link" : "riff\/monix\/ObservableState.html#onRoleChange(term:riff.raft.Term,oldRole:riff.raft.node.NodeRole,newRole:riff.raft.node.NodeRole):Unit", "kind" : "def"}, {"label" : "onNewLeader", "tail" : "(term: Term, leaderId: NodeId): Unit", "member" : "riff.raft.node.RoleCallback.onNewLeader", "link" : "riff\/monix\/ObservableState.html#onNewLeader(term:riff.raft.Term,leaderId:riff.raft.NodeId):Unit", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/ObservableState.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/ObservableState.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/ObservableState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/ObservableState.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/ObservableState.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/ObservableState.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/ObservableState.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableState.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableState.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableState.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/ObservableState.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/ObservableState.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/ObservableState.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/ObservableState.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/ObservableState.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/ObservableState.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/ObservableState.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/ObservableState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/ObservableState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "apply", "tail" : "()(sched: Scheduler): ObservableState", "member" : "riff.monix.ObservableState.apply", "link" : "riff\/monix\/ObservableState$.html#apply()(implicitsched:monix.execution.Scheduler):riff.monix.ObservableState", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/ObservableState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/ObservableState$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/ObservableState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/ObservableState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/ObservableState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/ObservableState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/ObservableState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/ObservableState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/ObservableState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/ObservableState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/ObservableState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/ObservableState$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/ObservableState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/ObservableState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/ObservableState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/ObservableState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "riff\/monix\/ObservableState.html", "kind" : "class"}, {"name" : "riff.monix.ObservableTimerCallback", "shortDescription" : "Provides a means to observe the nodes timeouts", "members_class" : [{"label" : "subscribe", "tail" : "(nodeId: NodeId, subscriber: Observer[TimerMessage]): Cancelable", "member" : "riff.monix.ObservableTimerCallback.subscribe", "link" : "riff\/monix\/ObservableTimerCallback.html#subscribe(nodeId:riff.raft.NodeId,subscriber:monix.reactive.Observer[riff.raft.messages.TimerMessage]):monix.execution.Cancelable", "kind" : "def"}, {"label" : "onReceiveHeartbeatTimeout", "tail" : "(): Unit", "member" : "riff.monix.ObservableTimerCallback.onReceiveHeartbeatTimeout", "link" : "riff\/monix\/ObservableTimerCallback.html#onReceiveHeartbeatTimeout():Unit", "kind" : "def"}, {"label" : "receiveTimeouts", "tail" : "(): Observable[TimerMessage]", "member" : "riff.monix.ObservableTimerCallback.receiveTimeouts", "link" : "riff\/monix\/ObservableTimerCallback.html#receiveTimeouts:monix.reactive.Observable[riff.raft.messages.TimerMessage]", "kind" : "def"}, {"label" : "onSendHeartbeatTimeout", "tail" : "(): Unit", "member" : "riff.monix.ObservableTimerCallback.onSendHeartbeatTimeout", "link" : "riff\/monix\/ObservableTimerCallback.html#onSendHeartbeatTimeout():Unit", "kind" : "def"}, {"label" : "sendTimeout", "tail" : "(): Observable[TimerMessage]", "member" : "riff.monix.ObservableTimerCallback.sendTimeout", "link" : "riff\/monix\/ObservableTimerCallback.html#sendTimeout:monix.reactive.Observable[riff.raft.messages.TimerMessage]", "kind" : "def"}, {"member" : "riff.monix.ObservableTimerCallback#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/ObservableTimerCallback.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/ObservableTimerCallback.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/ObservableTimerCallback.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/ObservableTimerCallback.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/ObservableTimerCallback.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/ObservableTimerCallback.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/ObservableTimerCallback.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableTimerCallback.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableTimerCallback.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/ObservableTimerCallback.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/ObservableTimerCallback.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/ObservableTimerCallback.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/ObservableTimerCallback.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/ObservableTimerCallback.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/ObservableTimerCallback.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/ObservableTimerCallback.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/ObservableTimerCallback.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/ObservableTimerCallback.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/ObservableTimerCallback.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "riff\/monix\/ObservableTimerCallback.html", "kind" : "class"}, {"name" : "riff.monix.RaftPipeMonix", "shortDescription" : "", "object" : "riff\/monix\/RaftPipeMonix$.html", "members_object" : [{"label" : "wireTogetherMonix", "tail" : "(raftInstById: Map[NodeId, RaftPipe[A, Observer, Observable, Observable, H]])(s: Scheduler): Unit", "member" : "riff.monix.RaftPipeMonix.wireTogetherMonix", "link" : "riff\/monix\/RaftPipeMonix$.html#wireTogetherMonix[A,H<:riff.raft.node.RaftMessageHandler[A]](raftInstById:Map[riff.raft.NodeId,riff.RaftPipe[A,monix.reactive.Observer,monix.reactive.Observable,monix.reactive.Observable,H]])(implicits:monix.execution.Scheduler):Unit", "kind" : "def"}, {"label" : "raftPipeForHandler", "tail" : "(handler: RaftNode[A])(arg0: ClassTag[A], sched: Scheduler): RaftPipe[A, Observer, Observable, Observable, RaftNode[A]]", "member" : "riff.monix.RaftPipeMonix.raftPipeForHandler", "link" : "riff\/monix\/RaftPipeMonix$.html#raftPipeForHandler[A](handler:riff.raft.node.RaftNode[A])(implicitevidence$12:scala.reflect.ClassTag[A],implicitsched:monix.execution.Scheduler):riff.RaftPipe[A,monix.reactive.Observer,monix.reactive.Observable,monix.reactive.Observable,riff.raft.node.RaftNode[A]]", "kind" : "def"}, {"label" : "observablePipeForNode", "tail" : "(n: RaftNode[A])(arg0: ClassTag[A], sched: Scheduler): RaftPipe[A, Observer, Observable, Observable, RaftNode[A]]", "member" : "riff.monix.RaftPipeMonix.observablePipeForNode", "link" : "riff\/monix\/RaftPipeMonix$.html#observablePipeForNode[A](n:riff.raft.node.RaftNode[A])(implicitevidence$11:scala.reflect.ClassTag[A],implicitsched:monix.execution.Scheduler):riff.RaftPipe[A,monix.reactive.Observer,monix.reactive.Observable,monix.reactive.Observable,riff.raft.node.RaftNode[A]]", "kind" : "def"}, {"label" : "newSingleNode", "tail" : "(id: NodeId, dataDir: Path, maxAppendSize: Int)(arg0: FromBytes[A], arg1: ToBytes[A], clock: RaftClock): RaftNode[A]", "member" : "riff.monix.RaftPipeMonix.newSingleNode", "link" : "riff\/monix\/RaftPipeMonix$.html#newSingleNode[A](id:riff.raft.NodeId,dataDir:java.nio.file.Path,maxAppendSize:Int)(implicitevidence$9:eie.io.FromBytes[A],implicitevidence$10:eie.io.ToBytes[A],implicitclock:riff.raft.timer.RaftClock):riff.raft.node.RaftNode[A]", "kind" : "def"}, {"label" : "singleNode", "tail" : "(id: NodeId, dataDir: Path)(arg0: FromBytes[A], arg1: ToBytes[A], arg2: ClassTag[A], sched: Scheduler): RaftPipe[A, Observer, Observable, Observable, RaftNode[A]]", "member" : "riff.monix.RaftPipeMonix.singleNode", "link" : "riff\/monix\/RaftPipeMonix$.html#singleNode[A](id:riff.raft.NodeId,dataDir:java.nio.file.Path)(implicitevidence$6:eie.io.FromBytes[A],implicitevidence$7:eie.io.ToBytes[A],implicitevidence$8:scala.reflect.ClassTag[A],implicitsched:monix.execution.Scheduler):riff.RaftPipe[A,monix.reactive.Observer,monix.reactive.Observable,monix.reactive.Observable,riff.raft.node.RaftNode[A]]", "kind" : "def"}, {"label" : "singleNode", "tail" : "(id: NodeId)(arg0: FromBytes[A], arg1: ToBytes[A], arg2: ClassTag[A], sched: Scheduler): RaftPipe[A, Observer, Observable, Observable, RaftNode[A]]", "member" : "riff.monix.RaftPipeMonix.singleNode", "link" : "riff\/monix\/RaftPipeMonix$.html#singleNode[A](id:riff.raft.NodeId)(implicitevidence$3:eie.io.FromBytes[A],implicitevidence$4:eie.io.ToBytes[A],implicitevidence$5:scala.reflect.ClassTag[A],implicitsched:monix.execution.Scheduler):riff.RaftPipe[A,monix.reactive.Observer,monix.reactive.Observable,monix.reactive.Observable,riff.raft.node.RaftNode[A]]", "kind" : "def"}, {"label" : "asCluster", "tail" : "(nodes: RaftNode[A]*)(arg0: ClassTag[A], sched: Scheduler): Map[NodeId, RaftPipe[A, Observer, Observable, Observable, RaftNode[A]]]", "member" : "riff.monix.RaftPipeMonix.asCluster", "link" : "riff\/monix\/RaftPipeMonix$.html#asCluster[A](nodes:riff.raft.node.RaftNode[A]*)(implicitevidence$2:scala.reflect.ClassTag[A],implicitsched:monix.execution.Scheduler):Map[riff.raft.NodeId,riff.RaftPipe[A,monix.reactive.Observer,monix.reactive.Observable,monix.reactive.Observable,riff.raft.node.RaftNode[A]]]", "kind" : "def"}, {"label" : "inMemoryClusterOf", "tail" : "(size: Int)(arg0: ClassTag[A], sched: Scheduler, clock: RaftClock): Map[NodeId, RaftPipe[A, Observer, Observable, Observable, RaftNode[A]]]", "member" : "riff.monix.RaftPipeMonix.inMemoryClusterOf", "link" : "riff\/monix\/RaftPipeMonix$.html#inMemoryClusterOf[A](size:Int)(implicitevidence$1:scala.reflect.ClassTag[A],implicitsched:monix.execution.Scheduler,implicitclock:riff.raft.timer.RaftClock):Map[riff.raft.NodeId,riff.RaftPipe[A,monix.reactive.Observer,monix.reactive.Observable,monix.reactive.Observable,riff.raft.node.RaftNode[A]]]", "kind" : "def"}, {"label" : "observableAsPublisher", "tail" : "(scheduler: Scheduler): AsPublisher[Observable]", "member" : "riff.monix.LowPriorityRiffMonixImplicits.observableAsPublisher", "link" : "riff\/monix\/RaftPipeMonix$.html#observableAsPublisher(implicitscheduler:monix.execution.Scheduler):riff.reactive.AsPublisher[monix.reactive.Observable]", "kind" : "implicit def"}, {"label" : "observerAsSubscriber", "tail" : "(scheduler: Scheduler): AsSubscriber[Observer]", "member" : "riff.monix.LowPriorityRiffMonixImplicits.observerAsSubscriber", "link" : "riff\/monix\/RaftPipeMonix$.html#observerAsSubscriber(implicitscheduler:monix.execution.Scheduler):riff.reactive.AsSubscriber[monix.reactive.Observer]", "kind" : "implicit def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/RaftPipeMonix$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/RaftPipeMonix$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/RaftPipeMonix$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/RaftPipeMonix$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/RaftPipeMonix$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/RaftPipeMonix$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/RaftPipeMonix$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/RaftPipeMonix$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/RaftPipeMonix$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/RaftPipeMonix$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/RaftPipeMonix$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/RaftPipeMonix$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/RaftPipeMonix$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/RaftPipeMonix$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/RaftPipeMonix$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/RaftPipeMonix$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/RaftPipeMonix$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/RaftPipeMonix$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/RaftPipeMonix$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "riff.monix.RiffSchedulers", "shortDescription" : "", "object" : "riff\/monix\/RiffSchedulers$.html", "members_object" : [{"label" : "computation", "tail" : "", "member" : "riff.monix.RiffSchedulers.computation", "link" : "riff\/monix\/RiffSchedulers$.html#computation", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "riff\/monix\/RiffSchedulers$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "riff\/monix\/RiffSchedulers$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "riff\/monix\/RiffSchedulers$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "riff\/monix\/RiffSchedulers$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "riff\/monix\/RiffSchedulers$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "riff\/monix\/RiffSchedulers$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "riff\/monix\/RiffSchedulers$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/RiffSchedulers$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/RiffSchedulers$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "riff\/monix\/RiffSchedulers$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "riff\/monix\/RiffSchedulers$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "riff\/monix\/RiffSchedulers$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "riff\/monix\/RiffSchedulers$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "riff\/monix\/RiffSchedulers$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "riff\/monix\/RiffSchedulers$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "riff\/monix\/RiffSchedulers$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "riff\/monix\/RiffSchedulers$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "riff\/monix\/RiffSchedulers$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "riff\/monix\/RiffSchedulers$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};